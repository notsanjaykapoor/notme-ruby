# api deployment and service

#
# pod termination:
# https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-terminating-with-grace
#

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ruby-async
spec:
  replicas: 2
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      name: ruby-async
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        # these labels will be used by the service definition
        name: ruby-async
    spec:
      containers:
        - name: app
          command: ["supervisord", "-c", "/usr/app/src/supervisor/supervisor.conf"]
          image: gcr.io/notme-330419/ruby-async:c1a17042adb2800b1c29bbc99cd6dacaf8234474
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: "50m"
              memory: "200M"
            limits:
              memory: "500M"
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /startup
              port: 80
            periodSeconds: 5
            timeoutSeconds: 5
      terminationGracePeriodSeconds: 30

---

#
# example port forward from service to local port 3030:
#   - kubectl port-forward service/ruby-async 3030:80
#

apiVersion: v1
kind: Service
metadata:
  name: ruby-async
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80 # nginx port
  selector:
    # identifies the set of pods to load balance traffic to
    name: ruby-async
  type: ClusterIP # accessible inside cluster only

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ruby-async-ingress
spec:
  rules:
  - host: ruby-async.notme.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ruby-async
            port:
              number: 80
  ingressClassName: nginx
